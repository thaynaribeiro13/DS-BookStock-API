// <auto-generated />
using System;
using BookStock.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DS.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStock.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Gênero")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("RegistroLivro")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_LIVROS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Autor = "Emily Trunko",
                            Gênero = "Drama",
                            Nome = "Últimas Mensagens Recebidas",
                            RegistroLivro = 0,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Autor = "Taylor Jenkins Reid",
                            Gênero = "Romance",
                            Nome = "Os Sete Maridos de Evelyn Hugo",
                            RegistroLivro = 0,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Autor = "C. C. Hunter",
                            Gênero = "Romance",
                            Nome = "Eu e Esse Meu Coração",
                            RegistroLivro = 0,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            Autor = "Suzanne Collins",
                            Gênero = "Distopia Adolescente",
                            Nome = "Jogos Vorazes",
                            RegistroLivro = 0,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            Autor = "V. E. Schwab",
                            Gênero = "Fantasia",
                            Nome = "A Sociedade Invisível de Addie LaRue",
                            RegistroLivro = 0,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("BookStock.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasDefaultValue("Comprador");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("listaLivro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Nome = "Admin",
                            PasswordHash = new byte[] { 196, 163, 70, 110, 251, 51, 93, 223, 106, 94, 151, 45, 71, 131, 220, 241, 239, 192, 215, 239, 42, 65, 209, 187, 91, 184, 40, 65, 124, 169, 200, 222, 249, 48, 214, 79, 65, 247, 241, 14, 69, 45, 144, 243, 243, 107, 220, 251, 137, 153, 44, 147, 116, 117, 212, 53, 93, 154, 69, 10, 121, 241, 177, 47 },
                            PasswordSalt = new byte[] { 33, 18, 125, 46, 179, 79, 14, 105, 52, 163, 51, 114, 137, 240, 208, 162, 70, 251, 69, 204, 56, 43, 122, 126, 37, 239, 255, 70, 145, 118, 84, 42, 255, 90, 219, 29, 140, 214, 166, 169, 184, 67, 150, 19, 121, 144, 158, 68, 196, 170, 97, 241, 234, 230, 221, 36, 47, 203, 27, 197, 19, 255, 165, 156, 134, 115, 119, 66, 35, 113, 131, 255, 30, 26, 111, 119, 198, 37, 252, 137, 77, 104, 138, 220, 113, 92, 129, 159, 180, 150, 87, 73, 73, 207, 29, 104, 75, 22, 240, 203, 247, 50, 229, 178, 141, 189, 18, 103, 138, 92, 152, 220, 85, 15, 243, 228, 133, 212, 175, 33, 187, 30, 59, 99, 197, 159, 183, 76 },
                            Username = "UsuarioAdmin",
                            listaLivro = 0
                        });
                });

            modelBuilder.Entity("BookStock.Models.Livro", b =>
                {
                    b.HasOne("BookStock.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
